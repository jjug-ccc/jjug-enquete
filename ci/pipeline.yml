---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
resources:
  - name: openenquete-repo
    type: git
    check_every: 10000h
    webhook_token: {{webhook-token}}
    source:
      uri: git@github.com:openenquete/enquete.git
      branch: master
      private_key: {{github-private-key}}
  - name: jjug-enquete-repo
    type: git
    check_every: 10000h
    webhook_token: {{webhook-token}}
    source:
      uri: git@github.com:jjug-ccc/jjug-enquete.git
      branch: master
      private_key: {{github-private-key}}
  - name: jjug-enquete-repo-version
    type: semver
    source:
      uri: git@github.com:jjug-ccc/jjug-enquete.git
      branch: master
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 0.0.1
  - name: utils
    type: git
    source:
      uri: https://github.com/maki-home/concourse-utils
      branch: master
  - name: cf
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: jjug
      skip_cert_check: true
  - name: m2
    type: docker-image
    source:
      repository: registry-192-168-11-210.sslip.io/making/enquete-m2
      username: {{nexus-username}}
      password: {{nexus-password}}
  - name: openenquete-repo-pr
    type: pull-request
    source:
      repo: openenquete/enquete
      uri: git@github.com:openenquete/enquete.git
      access_token: {{github-access-token}}
      private_key: {{github-private-key}}
  - name: jjug-enquete-repo-pr
    type: pull-request
    source:
      repo: jjug-ccc/jjug-enquete
      uri: git@github.com:jjug-ccc/jjug-enquete.git
      access_token: {{github-access-token}}
      private_key: {{github-private-key}}
jobs:
  - name: openenquete-unit-test-pr
    public: true
    plan:
    - aggregate:
      - get: repo
        resource: openenquete-repo-pr
        trigger: true
      - get: utils
      - get: m2
    - put: openenquete-repo-pr
      params:
        path: openenquete-repo
        status: pending
    - task: unit
      file: utils/tasks/unit-test.yml
      on_success:
        put: openenquete-repo-pr
        params:
          path: openenquete-repo
          status: success
      on_failure:
        put: openenquete-repo-pr
        params:
          path: openenquete-repo
          status: failure
  - name: openenquete-unit-test
    plan:
      - aggregate:
        - get: repo
          resource: openenquete-repo
          trigger: true
        - get: utils
        - get: m2
      - task: unit
        file: utils/tasks/unit-test.yml
  - name: openenquete-deploy-to-nexus
    plan:
      - aggregate:
        - get: repo
          resource: openenquete-repo
          trigger: true
          passed:
          - openenquete-unit-test
        - get: utils
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-nexus.yml
        params:
          NEXUS_USERNAME: {{nexus-username}}
          NEXUS_PASSWORD: {{nexus-password}}
          
  - name: jjug-enquete-unit-test-pr
    public: true
    plan:
    - aggregate:
      - get: repo
        resource: jjug-enquete-repo-pr
        trigger: true
      - get: utils
      - get: m2
    - put: jjug-enquete-repo-pr
      params:
        path: jjug-enquete-repo
        status: pending
    - task: unit
      file: utils/tasks/unit-test.yml
      on_success:
        put: jjug-enquete-repo-pr
        params:
          path: jjug-enquete-repo
          status: success
      on_failure:
        put: jjug-enquete-repo-pr
        params:
          path: jjug-enquete-repo
          status: failure
  - name: jjug-enquete-unit-test
    plan:
      - aggregate:
        - get: repo
          resource: jjug-enquete-repo
          trigger: true
        - get: utils
        - get: m2
      - task: unit
        file: utils/tasks/unit-test.yml
  - name: jjug-enquete-deploy-to-nexus
    plan:
      - aggregate:
        - get: repo
          resource: jjug-enquete-repo
          trigger: true
          passed:
          - jjug-enquete-unit-test
        - get: utils
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-nexus.yml
        params:
          NEXUS_USERNAME: {{nexus-username}}
          NEXUS_PASSWORD: {{nexus-password}}
  - name: jjug-enquete-deploy-to-cf
    plan:
      - aggregate:
        - get: openenquete-repo
          resource: openenquete-repo
          trigger: true
          passed:
          - openenquete-deploy-to-nexus
        - get: jjug-enquete-repo
          resource: jjug-enquete-repo
          trigger: true
          passed:
          - jjug-enquete-deploy-to-nexus
        - get: repo-version
          resource: jjug-enquete-repo-version
        - get: utils
      - task: download
        file: utils/tasks/download-snapshot.yml
        params:
          GROUP_ID: jjug
          ARTIFACT_ID: jjug-enquete
      - put: cf
        params:
          manifest: jjug-enquete-repo/manifest.yml
          path: output/app.jar
          current_app_name: questionnaires
          env:
            enquete.application-name: JJUGアンケート
            enquete.bitly.access-token: {{bitly-token}}
            enquete.cloud.max-pool-size: 40
            server.tomcat.max-threads: 60
  ### M2 cache
  - name: init-m2
    plan:
      - aggregate:
        - get: openenquete-repo
        - get: utils
      - task: create-m2-rootfs
        file: utils/tasks/m2-rootfs-init.yml
      - put: m2
        params:
          import_file: output/rootfs.tar
  - name: update-m2
    plan:
      - aggregate:
        - get: openenquete-repo
        - get: utils
        - get: m2
      - task: create-m2-rootfs
        file: utils/tasks/m2-rootfs-update.yml
      - put: m2
        params:
          import_file: output/rootfs.tar
params:
  foo: 100